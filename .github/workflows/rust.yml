on:
  push:
    branches: ["master", "release"]
  pull_request:
    branches: ["master"]
env:
  CARGO_TERM_COLOR: always
jobs:
  rust-check:
    name: Rust Check
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Check formatting
        run: cargo fmt --check
      - name: Check linter
        run: cargo check
  docker-build:
    name: Build Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/sinjs/nc-api
          tags: |
            type=ref,event=branch
            type=sha
        env:
          DOCKER_METADATA_SHORT_SHA_LENGTH: 7
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
